* native contact dmat print out 
*
  set paramdir "/home/gns/Charmm/c35b1r1/toppar"

open unit 1 read form name @paramdir/"top_all27_prot_na.rtf"
read rtf card unit 1
close unit 1

open unit 1 read form name @paramdir/"par_all27_prot_na.prm"
read param card unit 1
close unit 1

prnlev 5
wrnlev 2

READ SEQUENCE CARD
* CH1 domain of Igg residues 123 - 215
* missing loop 133-137 modeled based on mouse seq
*
93
THR THR PRO PRO SER VAL TYR PRO LEU ALA PRO GLY SER
SER MET VAL THR LEU GLY CYS LEU VAL LYS GLY TYR PHE
PRO GLU PRO VAL THR VAL THR TRP ASN SER GLY SER LEU
SER SER GLY VAL HSD THR PHE PRO ALA VAL LEU GLN SER
ASP LEU TYR THR LEU SER SER SER VAL THR VAL THR SER
SER THR TRP PRO SER GLU THR VAL THR CYS ASN VAL ALA
HSD PRO ALA SER SER THR LYS VAL ASP LYS LYS ILE VAL
PRO ARG


prnlev 6
generate ch1 warn setup

! rename atoms to ensure pdb compatibility with charmm

rename atom cd1 select resname ile .and. type cd end
rename atom oxt select type ot1 end
rename atom o select ires ?nres .and. type ot2 end

open unit 11 read form name "ch1.pdb"
read coor pdb offset -122 unit 11 sele segid ch1 end
close unit 11

print coor sele type oxt end

rename atom cd select resname ile .and. type cd1 end
rename atom ot1 select type oxt end
rename atom ot2 select ires ?nres .and. type o end

print coor sele segid ch1 .and. .not. type H* end

open unit 1 write card name ch1_initial.psf
write psf unit 1 card

open unit 1 write card name ch1_initial.cor
write coor unit 1 card

open write unit 9 card name ch1-sasa.dat 

! coor surface acce sele  all end
set index 1
label loop_res

coor surface acce sele  all end
scalar wmain stat select ires @index  end
set sas1 ?stot

coor stat sele ires @index end
set name1 = ?selresn

! hydrophobic (Cys, Phe, Ile,Leu, Trp, Val, Met, Tyr and Ala)
! polar (Gly, Pro, Asn, Thr, Ser, Gln and His)
! positively charged (Arg and Lys)
! negatively charged (Asp and Glu).

! /*Noaa, Cys , Phe , Leu , Trp , Val , Ile , Met , His , Tyr , Ala , Gly , Pro , Asn , Thr , Ser , Arg , Gln , Asp , Lys , Glu*/
! double all_chain[21] = {0.00, 140., 218., 180., 259., 160., 182, 204., 194., 229., 113., 85., 143., 158., 146., 122., 241., 189., 151., 211., 183.};

if @name1 .eq. cys then
 set type hydrophobic
 set x1 140
endif

if @name1 .eq. phe then
 set type hydrophobic
 set x1 218
endif

if @name1 .eg. leu then
 set type hydrophobic
 set x1 180
endif

if @name1 .eq. trp then
 set type hydrophobic
 set x1 259
endif

if @name1 .eq. val then
 set type hydrophobic
 set x1 160
endif

if @name1 .eq. ile then
 set type hydrophobic
 set x1 182
endif

if @name1 .eq. met then
 set type hydrophobic
 set x1 204
endif

if @name1 .eq. tyr then
 set type hydrophobic
 set x1 194
endif

if @name1 .eq. ala then
 set type hydrophobic
 set x1 229
endif

if @name1 .eq. gly then
 set type polar
 set x1 113
endif

if @name1 .eq. pro then 
 set type polar
 set x1 85
endif

if @name1 .eq. asn then
 set type polar
 set x1 143
endif
if @name1 .eq. thr then
 set type polar
 set x1 158
endif

if @name1 .eq. ser then 
 set type polar
 set x1 146
endif

if @name1 .eq. gln then
 set type polar
 set x1 122
endif

if @name1 .eq. hsd then
 set type polar
 set x1 241
endif

if @name1 .eq. arg then
 set type positively charged
 set x1 189
endif

if @name1 .eq. lys then 
 set type positively charged
 set x1 151
endif

if @name1 .eq. asp then
 set type negatively charged
 set x1 211
endif

if @name1 .eq. glu then
 set type negatively charged
 set x1 183
endif


! Si for strand "i", Li for loop "i" and Hi for helix "i" ??????? 

!coor secs verbose sele all end
!set nalpha ?nalpha
!set nbeta ?nbeta

calc x2  @sas1/@x1

coor orie mass

define backbone sele type N .or. type C .or. -
        type CA .or. type O .or. type OT* end
define heavy sele .not. type H* end

coor stat sele resid @index .and. backbone end

if ?selresn .eq. gly goto gly_sele

coor stat mass sele resid @index .and. heavy .and. .not. backbone end

label gly_sele

if @index .eq. 1 then 
echu 9
echo index SASA type nalpha nbeta Gly-X-Gly(x1) x1/sasa Distance_y Distance_z Distance_r
endif

calc r sqrt ( ?yave * ?yave + ?zave * ?zave )

write title unit 9
* @index @sas1 @name1 @type @x1 @x2 ?yave ?zave @r
*
   
!coor secs sele ires @index end sele all end
!echo ?alpha ?beta

 incr index by 1
if index le ?nres goto loop_res

open unit 1 write card name ch11.cor
write coor pdb unit 1 card
close unit 1


stop 
